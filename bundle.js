(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Poppins&family=Roboto+Mono&display=swap);"]),i.push([n.id,"/* IMPORTS */\n\n/* RESETS */\n\n/* makes sizing simpler */\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* remove default spacing */\n/* force styling of type through styling, rather than elements */\n\n* {\n  margin: 0;\n  padding: 0;\n  font: inherit;\n}\n\n/* dark mode user-agent-styles */\n/* \nhtml {\n  color-scheme: dark light;\n} */\n\n/* min body height */\n\nbody {\n  min-height: 100vh;\n}\n\n/* responsive images/videos */\nimg,\npicture,\nsvg,\nvideo {\n  display: block;\n  max-width: 100%;\n}\n\n\n/* STYLING */\n\n:root {\n  --bg-color: hsl(226, 19%, 18%);\n  --accent-color: hsl(226, 19%, 13%);\n  --light-accent-color: hsl(226, 19%, 16%);\n}\n\n@media (max-width: 1250px) {\n  :root {\n    font-size: min(2.5vw, 100%);\n  }\n}\n\nbody {\n  background-color: var(--bg-color);\n  color: white;\n  font-family: 'Poppins', sans-serif;\n\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n}\n\nheader {\n  text-align: center;\n  padding-block: 1.5rem;\n  font-size: 4rem;\n  background-color: var(--accent-color);\n}\n\nmain.shipPlacing {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-block: 1.5rem;\n  outline: none;\n}\n\nmain > .gameOverWrapper {\n  padding-block: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n}\n\nmain > .gameOverWrapper > .gameOverMessage {\n  text-align: center;\n  font-size: 5rem;\n}\n\nmain > .gameOverWrapper > button {\n  font-size: 1.5rem;\n  padding: 0.5rem 0.75rem;\n  background-color: var(--accent-color);\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n}\n\nmain > .gameOverWrapper > button:hover {\n  filter: brightness(0.5);\n}\n\nmain > .players {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10vw;\n  padding-block: 1.5rem;\n}\n\n@media (max-width: 1250px) {\n  main > .players {\n    flex-direction: column;\n    gap: 4rem;\n  }\n}\n\nmain .player > .title {\n  text-align: center;\n  font-size: 1.5rem;\n  padding-left: calc(2.75rem + 2rem);\n}\n\nmain  .player > .board {\n  font-family: 'Roboto Mono', monospace;\n  margin-bottom: 1rem;\n  user-select: none;\n}\n\nmain .player > .board > tr > td {\n  text-align: center;\n  background-color: var(--light-accent-color);\n}\n\nmain:not(.shipPlacing) .player > .board > tr > td:hover {\n  background-color: var(--accent-color);\n}\n\n\nmain .player > .board > tr > th,\nmain .player > .board > tr > td {\n  width: 2.75rem;\n  height: 2.75rem;\n  font-size: 2.1rem;\n  \n  /* outline: 1px solid red; */\n}\n\nmain .player > .board > tr > th:not(:first-child) {\n  padding-bottom: 1.5rem;\n  border-bottom: 4px solid var(--accent-color);\n}\n\n\nmain .player > .board > tr > :first-child {\n  padding-right: 2rem;\n  border-right: 4px solid var(--accent-color);\n  text-align: right;\n}\n\n\nfooter {\n  text-align: center;\n  padding-block: 1rem;\n  background-color: var(--accent-color);\n}\n\nmain:not(.shipPlacing) .player > .board > tr > td.sunk {\n  background-color: rgba(255, 0, 0, 0.8);\n}\n\nmain .player > .board > tr > td.ship:not(.sunk) {\n  background-color: rgba(48, 121, 255, 0.8);\n}\n\nmain.shipPlacing .player > .board > tr > td.legal {\n  background-color: rgba(0, 255, 0, 0.8);\n\n}\n\nmain.shipPlacing .player > .board > tr > td.illegal {\n  background-color: rgba(255, 0, 0, 0.9);\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,YAAY;;AAIZ,WAAW;;AAEX,yBAAyB;;AAEzB;;;EAGE,sBAAsB;AACxB;;AAEA,2BAA2B;AAC3B,gEAAgE;;AAEhE;EACE,SAAS;EACT,UAAU;EACV,aAAa;AACf;;AAEA,gCAAgC;AAChC;;;GAGG;;AAEH,oBAAoB;;AAEpB;EACE,iBAAiB;AACnB;;AAEA,6BAA6B;AAC7B;;;;EAIE,cAAc;EACd,eAAe;AACjB;;;AAGA,YAAY;;AAEZ;EACE,8BAA8B;EAC9B,kCAAkC;EAClC,wCAAwC;AAC1C;;AAEA;EACE;IACE,2BAA2B;EAC7B;AACF;;AAEA;EACE,iCAAiC;EACjC,YAAY;EACZ,kCAAkC;;EAElC,aAAa;EACb,iCAAiC;AACnC;;AAEA;EACE,kBAAkB;EAClB,qBAAqB;EACrB,eAAe;EACf,qCAAqC;AACvC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,qBAAqB;EACrB,aAAa;AACf;;AAEA;EACE,qBAAqB;EACrB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,WAAW;AACb;;AAEA;EACE,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,uBAAuB;EACvB,qCAAqC;EACrC,YAAY;EACZ,YAAY;EACZ,qBAAqB;AACvB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,qBAAqB;AACvB;;AAEA;EACE;IACE,sBAAsB;IACtB,SAAS;EACX;AACF;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,kCAAkC;AACpC;;AAEA;EACE,qCAAqC;EACrC,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,2CAA2C;AAC7C;;AAEA;EACE,qCAAqC;AACvC;;;AAGA;;EAEE,cAAc;EACd,eAAe;EACf,iBAAiB;;EAEjB,4BAA4B;AAC9B;;AAEA;EACE,sBAAsB;EACtB,4CAA4C;AAC9C;;;AAGA;EACE,mBAAmB;EACnB,2CAA2C;EAC3C,iBAAiB;AACnB;;;AAGA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;AACvC;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,sCAAsC;;AAExC;;AAEA;EACE,sCAAsC;AACxC",sourcesContent:["/* IMPORTS */\n\n@import url('https://fonts.googleapis.com/css2?family=Poppins&family=Roboto+Mono&display=swap');\n\n/* RESETS */\n\n/* makes sizing simpler */\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* remove default spacing */\n/* force styling of type through styling, rather than elements */\n\n* {\n  margin: 0;\n  padding: 0;\n  font: inherit;\n}\n\n/* dark mode user-agent-styles */\n/* \nhtml {\n  color-scheme: dark light;\n} */\n\n/* min body height */\n\nbody {\n  min-height: 100vh;\n}\n\n/* responsive images/videos */\nimg,\npicture,\nsvg,\nvideo {\n  display: block;\n  max-width: 100%;\n}\n\n\n/* STYLING */\n\n:root {\n  --bg-color: hsl(226, 19%, 18%);\n  --accent-color: hsl(226, 19%, 13%);\n  --light-accent-color: hsl(226, 19%, 16%);\n}\n\n@media (max-width: 1250px) {\n  :root {\n    font-size: min(2.5vw, 100%);\n  }\n}\n\nbody {\n  background-color: var(--bg-color);\n  color: white;\n  font-family: 'Poppins', sans-serif;\n\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n}\n\nheader {\n  text-align: center;\n  padding-block: 1.5rem;\n  font-size: 4rem;\n  background-color: var(--accent-color);\n}\n\nmain.shipPlacing {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-block: 1.5rem;\n  outline: none;\n}\n\nmain > .gameOverWrapper {\n  padding-block: 1.5rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0.5rem;\n}\n\nmain > .gameOverWrapper > .gameOverMessage {\n  text-align: center;\n  font-size: 5rem;\n}\n\nmain > .gameOverWrapper > button {\n  font-size: 1.5rem;\n  padding: 0.5rem 0.75rem;\n  background-color: var(--accent-color);\n  color: white;\n  border: none;\n  border-radius: 0.5rem;\n}\n\nmain > .gameOverWrapper > button:hover {\n  filter: brightness(0.5);\n}\n\nmain > .players {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10vw;\n  padding-block: 1.5rem;\n}\n\n@media (max-width: 1250px) {\n  main > .players {\n    flex-direction: column;\n    gap: 4rem;\n  }\n}\n\nmain .player > .title {\n  text-align: center;\n  font-size: 1.5rem;\n  padding-left: calc(2.75rem + 2rem);\n}\n\nmain  .player > .board {\n  font-family: 'Roboto Mono', monospace;\n  margin-bottom: 1rem;\n  user-select: none;\n}\n\nmain .player > .board > tr > td {\n  text-align: center;\n  background-color: var(--light-accent-color);\n}\n\nmain:not(.shipPlacing) .player > .board > tr > td:hover {\n  background-color: var(--accent-color);\n}\n\n\nmain .player > .board > tr > th,\nmain .player > .board > tr > td {\n  width: 2.75rem;\n  height: 2.75rem;\n  font-size: 2.1rem;\n  \n  /* outline: 1px solid red; */\n}\n\nmain .player > .board > tr > th:not(:first-child) {\n  padding-bottom: 1.5rem;\n  border-bottom: 4px solid var(--accent-color);\n}\n\n\nmain .player > .board > tr > :first-child {\n  padding-right: 2rem;\n  border-right: 4px solid var(--accent-color);\n  text-align: right;\n}\n\n\nfooter {\n  text-align: center;\n  padding-block: 1rem;\n  background-color: var(--accent-color);\n}\n\nmain:not(.shipPlacing) .player > .board > tr > td.sunk {\n  background-color: rgba(255, 0, 0, 0.8);\n}\n\nmain .player > .board > tr > td.ship:not(.sunk) {\n  background-color: rgba(48, 121, 255, 0.8);\n}\n\nmain.shipPlacing .player > .board > tr > td.legal {\n  background-color: rgba(0, 255, 0, 0.8);\n\n}\n\nmain.shipPlacing .player > .board > tr > td.illegal {\n  background-color: rgba(255, 0, 0, 0.9);\n}"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],s=0;s<n.length;s++){var c=n[s],l=r.base?c[0]+r.base:c[0],A=o[l]||0,d="".concat(l," ").concat(A);o[l]=A+1;var p=t(d),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(m);else{var u=a(m,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:u,references:1})}i.push(d)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=t(o[i]);e[s].references--}for(var c=r(n,a),l=0;l<o.length;l++){var A=t(o[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{function n(n,e){return n.some((n=>JSON.stringify(n)===JSON.stringify(e)))}class e{constructor(n){this.length=n,this.timesHit=0}hit(){this.timesHit++}isSunk(){return this.timesHit>=this.length}}class r{constructor(){this.board=r.createBoard(),this.ships=[],this.missedAttacks=[],this.hitAttacks=[],this.possibleHitsQueue=[]}static createBoard(){const n=[];for(let e=0;e<10;e++){let e=[];for(let n=0;n<10;n++)e.push(null);n.push(e)}return n}static parseCoords(n){const e={A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7,I:8,J:9};let[t,r]=n;if(t=t.toUpperCase(),!(!(t in e)||r<1||r>10))return[r-1,e[t]]}static isAttackInArray(n,e){for(const t of e)if(t[0]===n[0]&&t[1]===n[1])return!0;return!1}placeShip(n,e,t={vertical:!1}){const[r,a]=e;if(!this.canPlaceShip(n,e,t))return!1;for(let e=0;e<n.length;e++)t.vertical?this.board[r+e][a]=n:this.board[r][a+e]=n;return this.ships.push(n),!0}areShipsSunk(){for(const n of this.ships)if(!n.isSunk())return!1;return!0}receiveAttack(t){const[r,a]=t;if(this.board[r][a]instanceof e){if(this.board[r][a].hit(),this.hitAttacks.push(t),this.missedAttacks.push([r-1,a-1]),this.missedAttacks.push([r+1,a+1]),this.missedAttacks.push([r+1,a-1]),this.missedAttacks.push([r-1,a+1]),this.board[r][a].isSunk()){const e=this.findAllShipSquares(this.board[r][a].length,t);for(const t of e){let[e,r]=t;n(this.hitAttacks,[e-1,r])||this.missedAttacks.push([e-1,r]),n(this.hitAttacks,[e+1,r])||this.missedAttacks.push([e+1,r]),n(this.hitAttacks,[e,r-1])||this.missedAttacks.push([e,r-1]),n(this.hitAttacks,[e,r+1])||this.missedAttacks.push([e,r+1])}}return!0}return this.missedAttacks.push(t),!1}canPlaceShip(n,t,r={vertical:!1}){const[a,o]=t;if((r.vertical?a:o)+n.length>10)return!1;for(let t=0;t<n.length;t++){let n=a,i=o;if(r.vertical&&(n+=t),r.vertical||(i+=t),this.board[n][i]instanceof e)return!1;if(i<9&&this.board[n][i+1]instanceof e)return!1;if(i>0&&this.board[n][i-1]instanceof e)return!1;if(n<9){if(this.board[n+1][i]instanceof e)return!1;if(this.board[n+1][i+1]instanceof e)return!1;if(this.board[n+1][i-1]instanceof e)return!1}if(n>0){if(this.board[n-1][i]instanceof e)return!1;if(this.board[n-1][i+1]instanceof e)return!1;if(this.board[n-1][i-1]instanceof e)return!1}}return!0}getSquaresCoveredByNewShip(n,e,t={vertical:!1}){const[r,a]=e,o=[];for(let e=0;e<n.length;e++)if(t.vertical){if(r+e>9)return o;o.push([r+e,a])}else{if(a+e>9)return o;o.push([r,a+e])}return o}getNextShipLengthToPlace(){return[4,3,3,2,2,2,1,1,1,1][this.ships.map((n=>n.length)).length]}fillRandomly(){for(;this.getNextShipLengthToPlace();){let n=new e(this.getNextShipLengthToPlace()),t=[Math.floor(10*Math.random()),Math.floor(10*Math.random())],r=Math.random()<.5;this.placeShip(n,t,{vertical:r})}}findAllShipSquares(n,t){const[r,a]=t,o=[t];for(let t=1;t<n&&!(r+t>9)&&this.board[r+t][a]instanceof e;t++)o.push([r+t,a]);for(let t=1;t<n&&!(r-t<0)&&this.board[r-t][a]instanceof e;t++)o.push([r-t,a]);for(let t=1;t<n&&!(a+t>9)&&this.board[r][a+t]instanceof e;t++)o.push([r,a+t]);for(let t=1;t<n&&!(a-t<0)&&this.board[r][a-t]instanceof e;t++)o.push([r,a-t]);return o}addAdjacentSquaresToQueue(n){const[e,t]=n,r=this.possibleHitsQueue;e>0&&r.push([e-1,t]),t<9&&r.push([e,t+1]),e<9&&r.push([e+1,t]),t>0&&r.push([e,t-1])}}class a{constructor(){this.gameboard=new r}attack(n,e){return n.gameboard.receiveAttack(e)}attackRandom(e){const t=e.gameboard,r=t.missedAttacks.concat(t.hitAttacks);if(t.possibleHitsQueue=t.possibleHitsQueue.filter((e=>!n(r,e))),t.possibleHitsQueue.length>0){const n=Math.floor(Math.random()*t.possibleHitsQueue.length),e=t.possibleHitsQueue[n];return void(t.receiveAttack(e)&&t.addAdjacentSquaresToQueue(e))}const a=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];for(const n of r)if(n[0]===a[0]&&n[1]===a[1])return void this.attackRandom(e);t.receiveAttack(a)&&t.addAdjacentSquaresToQueue(a)}}function o(){const n=document.createElement("footer"),e=(new Date).getFullYear();return n.innerHTML=`@ ${e} Etheryen`,n}function i(){const n=document.createElement("header"),e=document.createElement("h1");return e.innerHTML="Battleship",n.appendChild(e),n}function s({playerObj:n,title:t,isEnemy:a=!1,attackingPlayerObj:o,isGameOver:i}){const s=document.createElement("div");s.className="player";const c=document.createElement("table");c.className="board";let A=document.createElement("tr");A.appendChild(document.createElement("div"));const d=["A","B","C","D","E","F","G","H","I","J"];for(const n of d){let e=document.createElement("th");e.innerHTML=n,A.appendChild(e)}c.appendChild(A);for(let n=0;n<10;n++){let e=document.createElement("tr");for(let t=-1;t<10;t++){let r=m([n,t]);e.appendChild(r)}c.appendChild(e)}const p=document.createElement("h1");return p.className="title",p.innerHTML=t,s.appendChild(c),s.appendChild(p),s;function m(t){const[s,c]=t;if(c<0){const n=document.createElement("th");return n.innerHTML=s+1,n}const A=n.gameboard,d=document.createElement("td");if(function(t,o){const[i,s]=o,c=n.gameboard;r.isAttackInArray(o,c.missedAttacks)?t.innerHTML="·":(r.isAttackInArray(o,c.hitAttacks)&&(t.innerHTML="✕",c.board[i][s]?.isSunk()&&t.classList.add("sunk")),a||n.gameboard.board[i][s]instanceof e&&t.classList.add("ship"))}(d,t),a&&!r.isAttackInArray(t,A.missedAttacks.concat(A.hitAttacks))){if(i)return d;d.onclick=()=>{o.attack(n,t),n.gameboard.areShipsSunk()||n.attackRandom(o);const e=o.gameboard.areShipsSunk()||n.gameboard.areShipsSunk();l({player:o,computer:n,isGameOver:e})}}return d}}function c({player:n,computer:e,isGameOver:t}){const r=document.createElement("main");if(t){const e=document.createElement("div");e.className="gameOverWrapper";const t=document.createElement("div");t.className="gameOverMessage";const o=n.gameboard.areShipsSunk()?"Defeat!":"Victory!";t.innerHTML=o;const i=document.createElement("button");i.innerHTML="Play again",i.onclick=()=>{d({player:new a})},e.appendChild(t),e.appendChild(i),r.appendChild(e)}const o=document.createElement("div");return o.className="players",o.appendChild(s({playerObj:n,title:"Player",isGameOver:t})),o.appendChild(s({playerObj:e,title:"Computer",isEnemy:!0,attackingPlayerObj:n,isGameOver:t})),r.appendChild(o),r}function l({player:n,computer:e,isGameOver:t}){const r=[i(),c({player:n,computer:e,isGameOver:t}),o()];document.body.innerHTML="";for(const n of r)document.body.appendChild(n)}function A({player:n,hoveredSquare:t,vertical:r=!1}){const o=document.createElement("main");o.className="shipPlacing";const i=document.createElement("div");i.className="player";const s=document.createElement("table");s.className="board";let c=document.createElement("tr");c.appendChild(document.createElement("div"));const A=["A","B","C","D","E","F","G","H","I","J"];for(const n of A){let e=document.createElement("th");e.innerHTML=n,c.appendChild(e)}s.appendChild(c);for(let n=0;n<10;n++){let e=document.createElement("tr");for(let t=-1;t<10;t++){let r=u([n,t]);e.appendChild(r)}s.appendChild(e)}const p=document.createElement("h1");p.className="title",p.innerHTML="Place your ships";const m=document.createElement("h1");return m.className="title",m.innerHTML="Hit SPACE to flip 90°",i.appendChild(s),i.appendChild(p),i.appendChild(m),o.appendChild(i),o.addEventListener("keypress",(function(e){"Space"===e.code&&d({player:n,hoveredSquare:t,vertical:!r})})),o.tabIndex=0,o;function u(o){const[i,s]=o;if(s<0){const n=document.createElement("th");return n.innerHTML=i+1,n}const c=document.createElement("td"),A=n.gameboard.board[i][s]instanceof e;if(c.className=A?"ship":"",o.toString()!==t?.toString()&&(c.onmouseenter=()=>{d({player:n,hoveredSquare:[i,s],vertical:r})}),c.onmouseleave=()=>{d({player:n,hoveredSquare:void 0,vertical:r})},t){const i=n.gameboard,s=i.getNextShipLengthToPlace(),A=new e(s),m=i.canPlaceShip(A,t,{vertical:r}),u=i.getSquaresCoveredByNewShip(A,t,{vertical:r});p=o,u.some((n=>JSON.stringify(n)===JSON.stringify(p)))&&(c.className=m?"legal":"illegal"),m&&o.toString()===t?.toString()&&(c.onclick=()=>{if(i.placeShip(A,t,{vertical:r}),i.getNextShipLengthToPlace())return void d({player:n,hoveredSquare:t,vertical:r});const e=new a;e.gameboard.fillRandomly(),l({player:n,computer:e})})}var p;return c}}function d({player:n,hoveredSquare:e,vertical:t}){const r=[i(),A({player:n,hoveredSquare:e,vertical:t}),o()];document.body.innerHTML="";for(const n of r)document.body.appendChild(n);document.querySelector("main").focus()}var p=t(379),m=t.n(p),u=t(795),h=t.n(u),f=t(569),g=t.n(f),C=t(565),b=t.n(C),E=t(216),v=t.n(E),y=t(589),B=t.n(y),k=t(426),S={};S.styleTagTransform=B(),S.setAttributes=b(),S.insert=g().bind(null,"head"),S.domAPI=h(),S.insertStyleElement=v(),m()(k.Z,S),k.Z&&k.Z.locals&&k.Z.locals,d({player:new a})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,